import {
  __commonJS
} from "./chunk-76J2PTFD.js";

// node_modules/@jscad/modeling/src/curves/bezier/create.js
var require_create = __commonJS({
  "node_modules/@jscad/modeling/src/curves/bezier/create.js"(exports, module) {
    var create = (points) => {
      if (!Array.isArray(points))
        throw new Error("Bezier points must be a valid array/");
      if (points.length < 2)
        throw new Error("Bezier points must contain at least 2 values.");
      const pointType = getPointType(points);
      return {
        points,
        pointType,
        dimensions: pointType === "float_single" ? 0 : points[0].length,
        permutations: getPermutations(points.length - 1),
        tangentPermutations: getPermutations(points.length - 2)
      };
    };
    var getPointType = function(points) {
      let firstPointType = null;
      points.forEach((point) => {
        let pType = "";
        if (Number.isFinite(point)) {
          pType = "float_single";
        } else if (Array.isArray(point)) {
          point.forEach((val) => {
            if (!Number.isFinite(val))
              throw new Error("Bezier point values must all be numbers.");
          });
          pType = "float_" + point.length;
        } else
          throw new Error("Bezier points must all be numbers or arrays of number.");
        if (firstPointType == null) {
          firstPointType = pType;
        } else {
          if (firstPointType !== pType) {
            throw new Error("Bezier points must be either all numbers or all arrays of numbers of the same size.");
          }
        }
      });
      return firstPointType;
    };
    var getPermutations = function(c) {
      const permutations = [];
      for (let i = 0; i <= c; i++) {
        permutations.push(factorial(c) / (factorial(i) * factorial(c - i)));
      }
      return permutations;
    };
    var factorial = function(b) {
      let out = 1;
      for (let i = 2; i <= b; i++) {
        out *= i;
      }
      return out;
    };
    module.exports = create;
  }
});

export {
  require_create
};
//# sourceMappingURL=chunk-UGW2KGPM.js.map
